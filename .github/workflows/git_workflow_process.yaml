name: Automated Git Workflow used by developers

on:
  push:
    branches: ['*']
  pull_request:

permissions:
  contents: write  # Changed to write to allow pushing changes
  pull-requests: write
  id-token: write

jobs:
  format-and-create-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Debug Branch Info
        run: |
          echo "github.ref: ${{ github.ref }}"
          echo "github.head_ref: ${{ github.head_ref }}"

      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0  # Get full history


      - name: Setup Git
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"

      - name: Run Black (format instead of check)
        uses: psf/black@stable
        with:
          options: "."

      - name: Run isort (apply changes)
        uses: isort/isort-action@v1
        with:
          requirements-files: ""
          sort-paths: "."
          configuration: "--profile black"

      - name: Check for formatting changes
        id: check-changes
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "Formatting changes were needed and have been applied"
          else
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No formatting changes needed"
          fi

      - name: Commit changes back to branch
        if: steps.check-changes.outputs.changes == 'true'
        run: |
          git add .
          git commit -m "Apply automatic formatting with Black and isort"
          git push https://x-access-token:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/${{ github.repository }} HEAD:${{ github.head_ref || github.ref_name }}

      - name: Check if PR exists
        id: check-pr
        if: github.event_name == 'push' && github.ref != 'refs/heads/main'
        run: |
            BRANCH_NAME="${{ github.ref_name || github.ref}}"
            echo "Current branch: $BRANCH_NAME"
            PR_EXISTS=$(gh pr list --head "$BRANCH_NAME" --base main --json number --jq 'length')
            echo "Number of existing PRs: $PR_EXISTS"

            if [ "$PR_EXISTS" -gt 0 ]; then
              echo "PR for branch $BRANCH_NAME already exists"
              echo "create_pr=false" >> $GITHUB_OUTPUT
            else
              echo "No PR exists for branch $BRANCH_NAME"
              echo "create_pr=true" >> $GITHUB_OUTPUT
            fi
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create PR
        if: steps.check-pr.outputs.create_pr == 'true' && github.event_name == 'push' && github.ref != 'refs/heads/main'
        run: |
              echo "Creating PR for branch ${{ github.ref_name }}"
              gh pr create \
                --repo "SaabriinMo/checksum_scripts" \
                --base main \
                --head "${{ github.repository_owner }}:${{ github.ref_name }}" \
                --title "Automated PR for branch: ${{ github.ref_name }}" \
                --body "This PR was automatically created from branch: ${{ github.ref_name }}"
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  lint:
    runs-on: ubuntu-latest
    needs: format-and-create-pr
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref }}
          fetch-depth: 0

      - run: git pull

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - run: pip install pylint

      - id: pylint
        run: |
          mkdir -p reports
          python -m pylint *.py > reports/pylint-report.txt || true

      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: pylint-report
          path: reports/pylint-report.txt

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-file: reports/pylint-report.txt
          edit-mode: replace
